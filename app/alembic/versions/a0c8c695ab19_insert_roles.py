"""insert Roles

Revision ID: a0c8c695ab19
Revises: 747d59121c3a
Create Date: 2024-12-17 11:24:46.462773

"""

from typing import Sequence, Union
from fastapi import Depends
from models.rol import Rol
from models.user_rol import User_rol
from models.user import User
from alembic import op
from database.database import SessionLocal
from sqlalchemy.orm import Session
from controllers import userController

import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a0c8c695ab19'
down_revision: Union[str, None] = '747d59121c3a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    db = SessionLocal()
    try:
        admin_rol = Rol(rol="Super_admin")
        db.add(admin_rol)
        db.commit()
        db.refresh(admin_rol)
        guest_rol = Rol(rol="Guest")
        db.add(guest_rol)
        db.commit()
        db.refresh(guest_rol)
        hashed_pwd = userController.get_password_hash("Super_admin")
        user = User(email="Super_admin",password=hashed_pwd)
        db.add(user)
        db.commit()
        db.refresh(user)
        user_rol = User_rol(user_id=user.id,rol_id=admin_rol.id)
        db.add(user_rol)
        db.commit()
        db.refresh(user_rol)
        print(user)
        print("added roles")
    except Exception as e:
        db.rollback() 
        raise e
    finally:
        db.close()
    # ### commands auto generated by Alembic - please adjust! ###
    
    # connection = op.get_bind()
    # empty_database = connection.execute(sa.text("SELECT count(*) FROM information_schema.tables WHERE table_schema = 'public'")).scalar() == 0
    
    # if empty_database:
    #     # Crear roles predeterminados si la base de datos está vacía
    #     default_roles = [
    #         "Admin",
    #         "SuperAdmin",
    #         "User"
    #     ]

        
    #     for role_data in default_roles:
    #         new_role = Rol(name=role_data)
    #         op.
    #         op.bulk_insert(op.get_bind(), new_role, [
    #             {"name": role_data["name"]}
    #         ])
    # # # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
